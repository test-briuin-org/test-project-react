name: CI/CD Pipeline for React Project

# Triggers
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - test
          - development
          - staging
          - production

# Global environment variables
env:
  NODE_VERSION: '20.x'

# Jobs
jobs:
  # Job 1: Install Dependencies (Shared setup)
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

  # Job 2: Build and Test (Automated, per environment)
  build-and-test:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [test, development, staging, production]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build for ${{ matrix.env }}
        env:
          REACT_APP_ENV: ${{ matrix.env }}
          REACT_APP_API_URL: ${{ vars[format('API_URL_{0}', matrix.env)] }}
        run: |
          mkdir -p dist-${{ matrix.env }}
          npm run build -- --output-path=dist-${{ matrix.env }}

      - name: Run SAST
        run: npm run lint  # Replace with your SAST tool if different

      - name: Run Unit Tests
        run: npm test -- --ci --maxWorkers=2

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          start: npm start
          wait-on: 'http://localhost:3000'
          config: baseUrl=http://localhost:3000
        env:
          CYPRESS_ENV: ${{ matrix.env }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.env }}
          path: dist-${{ matrix.env }}
          retention-days: 5

  # Job 3: Deploy (Manual, selected environment)
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.event.inputs.environment }}
          path: dist

      - name: Deploy to ${{ github.event.inputs.environment }}
        env:
          DEPLOY_SERVER: ${{ secrets[format('DEPLOY_SERVER_{0}', github.event.inputs.environment)] }}
          DEPLOY_USER: ${{ secrets[format('DEPLOY_USER_{0}', github.event.inputs.environment)] }}
          DEPLOY_KEY: ${{ secrets[format('DEPLOY_KEY_{0}', github.event.inputs.environment)] }}
        run: |
          echo "$DEPLOY_KEY" > deploy_key
          chmod 600 deploy_key
          rsync -avz --progress -e "ssh -i deploy_key -o StrictHostKeyChecking=no" dist/ ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_SERVER }}:/path/to/deploy/${{ github.event.inputs.environment }}
          rm deploy_key